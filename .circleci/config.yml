version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.4.1
  aws-ecr: circleci/aws-ecr@6.7.0

# Depends on the following ENV vars:
#   * GITHUB_DEPLOY_TOKEN_USER
#   * GITHUB_DEPLOY_TOKEN_SECRET
  image-builder: included-health/image-builder@1
jobs:
  build_and_push_cubestore:
    environment:
      DOCKER_BUILDKIT: 1
    docker:
      - image: $ECR_ENDPOINT/image-builder:master
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
          docker_layer_caching: true
      - run:
          name: build docker image
          command: |
            cd rust/cubestore && build-and-push  \
            --image cubestore-base \
            --file Dockerfile
  build_and_push_cubejs:
    environment:
      DOCKER_BUILDKIT: 1
    docker:
      - image: $ECR_ENDPOINT/image-builder:master
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
          docker_layer_caching: true
      - run:
          name: setup rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            rustup default nightly
      - run:
          name: build cubesql
          command: |
            source "$HOME/.cargo/env"
            cd rust/cubesql && cargo build
      - run:
          name: build dev docker image
          command: |
            docker build -t cubejs/cube:build \
              -f ./packages/cubejs-docker/dev.Dockerfile .
      - run:
          name: build local artifacts docker image
          command: |
            build-and-push  \
            --image cube-base \
            --file ./packages/cubejs-docker/local.Dockerfile \
            --build-dir ./packages/cubejs-docker/


workflows:
  version: 2
  build_and_test_workflow:
    jobs:
      - build_and_push_cubestore:
          context:
            - dod-pypi
            - ecr
            - grh-drone
      - build_and_push_cubejs:
          context:
            - dod-pypi
            - ecr
            - grh-drone
